/* <%= project.sprite.name %> sprite svg icons */
/* padding: <%= svg_sprite.main.options.shape.spacing.padding %> */
$icons: (
    sprite: (
      width: {{spriteWidth}}px, 
      height: {{spriteHeight}}px, 
      pngPath: '../images/sprites/svg-sprite.png', 
      svgPath: '../images/sprites/svg-sprite.svg'),
{{#shapes}}   
{{base}}: (
  width: {{width.inner}}px, 
  height: {{height.inner}}px, 
  backgroundX: {{position.absolute.x}}px, 
  backgroundY: {{position.absolute.y}}px),
{{/shapes}});

$sprite: map-get($icons, sprite) !default;

%sprite {
  background-image: url(map-get($sprite, svgPath));
  background-size: map-get($sprite, width) map-get($sprite, height);
}

%sprite-ie {
  background-image: url(map-get($sprite, pngPath));
  background-size: auto;
}

@mixin ie-sprite($icon, $type) {
  $iconMap: icon-attr($icon, $icons);

  @if $ieSprite {
    #{$ieSprite} & {
      // Shares the PNG background
      @if $type == all {
        @extend %sprite-ie;
      }
    }
  }
}

@mixin sprite($icon, $type: all) {

  @if $type == all {
    // Shares the backgrounds
    @extend %sprite;
  }

  $iconMap: icon-attr($icon, $icons);

  // Outputs dimensions in rem
  @if $type == all or $type == size or $type == nobg {
    width: map-get($iconMap, width);
    height: map-get($iconMap, height);
  }

  // Outputs background position in rem
  @if $type == all or $type == bg or $type == nobg {
    background-position: map-get($iconMap, x)-15 map-get($iconMap, y)-15;
  }

  // Add ie fallback
  @include ie-sprite($icon, $type: $type);

}

@each $spriteImage in map-keys($icons){

  @if $spriteImage != "sprite" {

    $iconMap: icon-attr($spriteImage, $icons);

    .icon__#{$spriteImage}{
      @include sprite($spriteImage, nobg);
    }
  }
}

.icon{
  @extend %sprite;
}

#{$ieSprite}{
  .icon{
    @extend %sprite-ie;
  }
}

