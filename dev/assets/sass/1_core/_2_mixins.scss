// ************************************************************************************
// MIXINS - CLASSIC BASE
// ************************************************************************************

// tady prijdou moje finkce

// kulate rohy
@mixin border-radius($radius:$radius){
    border-radius: $radius;
}

@mixin perspective($value){
    -webkit-perspective: $value;
    -moz-perspective: $value;
    -o-perspective: $value;
    perspective: $value;
}

@mixin backface(){
    -webkit-backface-visibility: hidden; 
    -moz-backface-visibility: hidden;
    -ms-backface-visibility: hidden;
    -o-backface-visibility: hidden;
    backface-visibility: hidden;
}

@mixin preserve(){
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    -o-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

// pruhlednost
@mixin opacity($op){
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$op*100+")"; // IE 8 
    filter: alpha(opacity=$op*100); // IE 5-7
    -moz-opacity: $op; // Netscape
    -khtml-opacity: $op;  // Safari 1.x
    opacity: $op; // modern browsers 
}

//stin
@mixin box-shadow($shadow){
    box-shadow: $shadow;
}

@mixin box-double-shadow($shadow1,$shadow2){
    box-shadow: $shadow1,$shadow2;
}

@mixin text-shadow($shadow){
    text-shadow:$shadow;
}

@mixin rotatey($deg:180){
    transform: rotateY($deg+deg);
}

@mixin rotate($deg:180){
    transform: rotate($deg+deg);
}

// conditions for IE9
@mixin ie9{  
    .ie9 & { @content }
}
// conditions for IE8 and below 
@mixin oldie{ 
    .oldie & { @content }
}

@mixin align($direction:both, $position:0){
    position: absolute;

    @if $direction == both{
        left: $position;
        right: $position;
        margin: auto;
        bottom: $position;
        top: $position;
    }

    @if $direction == horizontal{
        left: $position;
        right: $position;
        margin-right: auto;
        margin-left: auto;
    }

    @if $direction == vertical {
        top: $position;
        bottom: $position;
        margin-top: auto;
        margin-bottom: auto;
    }
}


//columns
@mixin columns($count, $gap:$column-gap){
    column-count: $count;
    column-gap:$gap;

    margin-top: -$gap;

    &__item{
        padding-top: $gap;
    }

    .no-columns &{
        column-count: 1;
        column-gap:0;
        
        font-size: 0;
        margin-top: -$gap;
        margin-left: (-$gap/2);
        margin-right: (-$gap/2);

        &__item{
            display: inline-block;
            vertical-align: top;
            width: percentage(1/$count);
            padding: $gap $gap/2 0;
            font-size: $font-size;
        }
    }
}

//grid
@mixin grid($gap:$column-gap) {
    $gap:remove-units($gap) * 1px;
    margin: -$gap (-$gap/2) 0;
    font-size: 0;
    clear: both;

    &__item{
        display: inline-block;
        vertical-align: top;
        padding: $gap $gap/2 0;
        font-size: $font-size;
    }
}

//mixin pro pocitani sirky elementu
@mixin percentage-width($width, $container-width:$width-layout){
    width: percentage(remove-units($width)/remove-units($container-width));
}

// justify elements
@mixin justify($width:174, $vertical-align:top){
    text-align: justify;
    line-height: 1;

    &__item{
        display: inline-block;
        width: remove-units($width)+px;
        vertical-align: $vertical-align;    

        position: relative;
        top: 1em; // your line-height
    }
    
    &:before{
        display:block;
        content: "";
        width: 100%;
        margin-bottom: -1em; // your line-height
    }

    &:after{
        display: inline-block;
        content: "";
        width: 100%;
    }
}

// roztahnout obrazek na celou vysku / sirku a vycentrovat
@mixin cover-image(){
    display: block;
    position: absolute;
    @include align(both, -200%);

    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
}

// roztahnout video na celou vysku / sirku a vycentrovat
@mixin cover-video(){
    @include cover-image();
    -o-object-fit: cover;
    object-fit: cover;

    @include cover();
    background-position: center center;
    background-repeat: no-repeat;
}

// parallax
@mixin parallax($check:yes){
    @if $check == "none"{
        -webkit-background-attachment : initial;
        -moz-background-attachment : initial;
        -ms-background-attachment : initial;
        -o-background-attachment : initial;
        background-attachment : initial;
    }
    @else{
        -webkit-background-attachment : fixed;
        -moz-background-attachment : fixed;
        -ms-background-attachment : fixed;
        -o-background-attachment : fixed;
        background-attachment : fixed;
    }    

    @include query($tablet){
        -webkit-background-attachment : initial;
        -moz-background-attachment : initial;
        -ms-background-attachment : initial;
        -o-background-attachment : initial;
        background-attachment : initial;
    }  
}

// css zvetseni objektu
@mixin scale($value:1.5){
    transform:scale($value);
}

// rgba pozadi
@mixin rgba($color,$alpha) {
    background-color:$color;
    background-color: rgba(red($color), green($color), blue($color), $alpha);
}

// Gradient s nastavením procent
@mixin gradient($start-color:#fff, $start-perc: 0%, $end-color:#000, $end-perc: 100%) {
    background: $start-color;
    background: -moz-linear-gradient(top, $start-color $start-perc, $end-color $end-perc);
    background: -webkit-gradient(linear, left top, left bottom, color-stop($start-perc,$start-color), color-stop($end-perc,$end-color));
    background: -webkit-linear-gradient(top, $start-color $start-perc,$end-color $end-perc);
    background: -o-linear-gradient(top, $start-color $start-perc,$end-color $end-perc);
    background: -ms-linear-gradient(top, $start-color $start-perc,$end-color $end-perc);
    background: linear-gradient(to bottom, $start-color $start-perc,$end-color $end-perc);
    filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}', endColorstr='#{$end-color}', GradientType=0)";
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}', endColorstr='#{$end-color}', GradientType=0)";
}

// Gradient horizontální
@mixin gradient-horizontal($start-color, $end-color) {
    background: $start-color;
    background: -moz-linear-gradient(left, $start-color 0%, $end-color 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,$start-color), color-stop(100%,$end-color));
    background: -webkit-linear-gradient(left, $start-color 0%,$end-color 100%);
    background: -o-linear-gradient(left, $start-color 0%,$end-color 100%);
    background: -ms-linear-gradient(left, $start-color 0%,$end-color 100%);
    background: linear-gradient(to right, $start-color 0%,$end-color 100%);
    filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}', endColorstr='#{$end-color}', GradientType=0)";
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}', endColorstr='#{$end-color}', GradientType=0)";
}

@mixin box-sizing($sizing) {
    -webkit-box-sizing: $sizing;
    -moz-box-sizing: $sizing;
    -ms-box-sizing: $sizing; 
    box-sizing: $sizing;
}

// Zápis width a height - obdélník
@mixin size($width, $height:$width) {
    width: remove-units($width)+px;
    height: remove-units($height)+px;
}

@mixin transform($transform) {
    transform: $transform;
}

@mixin transform-origin($origin) {
    transform-origin: $origin;
}

@mixin translate($x, $y) {
    transform: translate($x, $y);
}

@mixin skew($x, $y) {
    transform: skew($x, $y);
}

@mixin translate3d($x, $y, $z) {
    transform: translate3d($x, $y, $z);
}


// Background clip
@mixin background-clip($clip) {
    background-clip: $clip;
}

// ************************************************************************************
//  MIXINS - vlastni
// **************************************************************************************/

//odstrani jednotky (px, rem atd) a necha pouze cislo
@function remove-units($number) {
  @return $number / ($number * 0 + 1);
}

//rgba funkce
@function frgba($color,$alpha){
    @return rgba(red($color), green($color), blue($color), $alpha);
}

// styly pro webkit prohlizece
@mixin webkit{ // css rules for webkit (chrome and safari)
    @media screen and (-webkit-min-device-pixel-ratio:0) { @content }
}

// letter spacing
@mixin ls($value) {
  letter-spacing: $value/1000+em;
}

//prepocet media queries z px do em jednotek
@function px-to-em-query($value){
    $value: $value / ($value * 0 + 1);//remove any units after number
    @return ($value/16)*1em;
}

//responsive
@mixin query($value, $type:max){
    @if $type == "min"{
        $value:$value+1;
    }
    @media screen and (#{$type}-width: px-to-em-query($value) ){
        @content
    }
}

//responsive between
@mixin query-between($max:0, $min:0){
    @media screen and (max-width: px-to-em-query($max)) and (min-width: px-to-em-query($min+1)){
        @content
    }
}


// Resetování ul nebo ol listu
@mixin reset-ul() {
    padding: 0;
    margin: 0;
    list-style: none;
}


// Nastavení centrování elementu, defaultně i horizontáně, parametrem lze horizontální změnit
@mixin center-it($text-align: center) {
    display: table-cell;
    vertical-align: middle;
    text-align: $text-align;
}


// css3 animace (vetsinou na odkazy)
@mixin animate($anim:all, $duration:$transition-duration){
    @include transition-property($anim);
    @include transition-duration($duration);
    @include transition-function($transition-function);
}

@mixin transition-property($property:none) {
    transition-property: #{$property};
}

@mixin transition-duration($duration:$transition-duration) {
    transition-duration: #{$duration};
}

@mixin transition-function($function:$transition-function) {
    transition-timing-function: #{$function};
}

@mixin transition-delay($delay:0) {
    transition-delay: #{$delay};
}


// Clearfix
@mixin cfx() {
    @extend %clearfix;
}

// Preloader
@mixin preloader() {
    @extend %preloader;
}


// Nastavení background image, cesta do design se nastavuje sama, dále pozice a repeat, default hodnoty nastaveny
@mixin background($background-url: none, $background-position: 0 0, $background-repeat: no-repeat) {
    background-image: url('#{$path-css-images}/#{$background-url}');
    background-repeat: $background-repeat;
    background-position: $background-position;
}

// vypln pozadi
@mixin cover(){
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -ms-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

// Skrytí scrollbaru ve všech prohlížečích
@mixin scrollbar-hide() {
    overflow: auto;
    -ms-overflow-style: none;
    overflow: -moz-scrollbars-none;

    &::-webkit-scrollbar {
        display: none;
    }
}


// Nastavuje výšku řádku a počet řádků, kolik si element bude udržovat a kde text usekne
//prvni hodnota = pocet radku
//druha hodnota = line-height v px
//treti hodnota = font-size, pokud je jiny nez ktery je globalni
@mixin eliminate-lines($count-line, $height-line:default, $font-size:$font-size) {
    display: block;
    overflow: hidden;

    @if $height-line == default{//pokud je to defaultni
        height: remove-units($line-height) * remove-units($count-line) +em;
        line-height: remove-units($line-height) +em;
    }@else{//pokud ne pocitej
        height: remove-units($height-line/$font-size) * remove-units($count-line) +em;
        line-height: remove-units($height-line/$font-size) +em;
    }
}

//omezit na jeden radek
@mixin text-overflow(){
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}


// Nastavuje elementu stejnou výšku a stejnou výšku řádku
@mixin h-lh($height) {
    height: remove-units($height)+px;
    line-height: remove-units($height)+px;
}

// Nastavení pro fontface, načte font, stačí mu dodat název a  název souboru, cesta je nastavena z variables
@mixin font-face($font-name, $font-file, $font-weight: normal, $font-style: normal) {

    @font-face {
        font-family: '#{$font-name}';
        src: url('#{$path-font}/#{$font-file}.eot');
        src: url('#{$path-font}/#{$font-file}.eot?#iefix') format('embedded-opentype'),
            url('#{$path-font}/#{$font-file}.woff2') format('woff2'),
            url('#{$path-font}/#{$font-file}.woff') format('woff'),
            url('#{$path-font}/#{$font-file}.ttf') format('truetype'),
            url('#{$path-font}/#{$font-file}.svg##{$font-name}') format('svg');
        font-weight: $font-weight;
        font-style: $font-style;

    }
    @include webkit {
        @font-face {
            font-family: '#{$font-name}';
            src: url('#{$path-font}/#{$font-file}.svg') format('svg');
        }
    }

}

